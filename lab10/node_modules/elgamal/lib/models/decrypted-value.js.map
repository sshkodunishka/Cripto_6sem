{"version":3,"sources":["../../src/models/decrypted-value.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAA;;;;;;;;IAKqB,c;AAQnB,0BAAY,CAAZ,EAAe;AAAA;;AACb,mBAAe,CAAf,uDAAe,CAAf;AACE,WAAK,QAAL;AACE,aAAK,EAAL,GAAU,qBAAW,IAAI,MAAJ,CAAW,CAAX,EAAc,QAAd,CAAuB,KAAvB,CAAX,EAA0C,EAA1C,CAAV;AACA;AACF,WAAK,QAAL;AACE,aAAK,EAAL,GAAU,0BAAc,CAAd,CAAV;AACA;AACF;AACE,aAAK,EAAL,GAAU,CAAV;AARJ;AAUD;;;;;;;;;;+BAEU;AACT,aAAO,IAAI,MAAJ,CAAW,KAAK,EAAL,CAAQ,WAAR,EAAX,EAAkC,QAAlC,EAAP;AACD;;;;;kBAvBkB,c","file":"decrypted-value.js","sourcesContent":["import { BigInteger as BigInt } from 'jsbn';\n\n/**\n * Stores a value which was decrypted by the ElGamal algorithm.\n */\nexport default class DecryptedValue {\n  /**\n   * Decrypted message stored as a BigInt.\n   * @type BigInt\n   * @memberof DecryptedValue\n   */\n  bi;\n\n  constructor(m) {\n    switch (typeof m) {\n      case 'string':\n        this.bi = new BigInt(new Buffer(m).toString('hex'), 16);\n        break;\n      case 'number':\n        this.bi = new BigInt(`${m}`);\n        break;\n      default:\n        this.bi = m;\n    }\n  }\n\n  toString() {\n    return new Buffer(this.bi.toByteArray()).toString();\n  }\n}\n"]}